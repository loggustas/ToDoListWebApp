@using System.Globalization
@model Record

@{
    bool hideCompleted = (bool)TempData["hideCompleted"];
    bool showDueToday = (bool)TempData["showDueToday"];
}

<div class="card card-outline-primary m-1 p-1" style="background-color: #F5D7E3">
    <div class="bg-faded p-1">
        <h4>
            @Model.Title
            @{
                if (Model.Status.Trim().Equals("Not started"))
                {
                                        <span class="badge badge-pill badge-primary" style="float:right; background-color: #b50937">@Model.Status</span>
                }
                else if (Model.Status.Trim().Equals("Ongoing"))
                {
                                        <span class="badge badge-pill badge-primary" style="float:right; background-color: #b59009">@Model.Status</span>
                }
                else
                {
                                        <span class="badge badge-pill badge-primary" style="float:right; background-color: #23a307">@Model.Status</span>
                }
            }
        </h4>
    </div>
    <div>
        <span class="card-text p-1">
            @{
                var recordDate = DateTime.ParseExact(Model.DueDate.Trim(), "yyyy-MM-dd", CultureInfo.InvariantCulture);
                var todayDate = DateTime.Today;
                
                if (recordDate > todayDate)
                {
                            <span class="badge badge-pill badge-primary" style="float:left; margin-top: 1.2rem; background-color: #23a307">Due: @Model.DueDate</span>
                }
                else if (recordDate == todayDate)
                {
                            <span class="badge badge-pill badge-primary" style="float:left; margin-top: 1.2rem; background-color: #b59009">Due: @Model.DueDate</span>
                }
                else
                {
                            <span class="badge badge-pill badge-primary" style="float:left; margin-top: 1.2rem;background-color: #b50937">Due: @Model.DueDate</span>
                }
            }

            <a asp-controller="List" asp-action="ViewFull" asp-route-id="@Model.Id" asp-route-hideCompletedAfter="@hideCompleted" asp-route-showDueTodayAfter="@showDueToday" class="buttonView" style="float:right">
                Full View
            </a>
            <a asp-controller="List" asp-action="EditRecord" asp-route-id="@Model.Id" asp-route-hideCompletedAfter="@hideCompleted" asp-route-showDueTodayAfter="@showDueToday" class="buttonEdit" style="float:right">
                Edit
            </a>
            <a class="buttonDelete" data-toggle="modal" data-target="#deleteModal" style="float:right; color: #FFFFFF">
                Delete
            </a>
        </span>
        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Delete the task.</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        You sure want to delete this task?
                    </div>
                    <div class="modal-footer">
                        <a class="button" data-dismiss="modal" style="color: #FFFFFF">Close</a>
                        <a asp-controller="List" asp-action="DeleteRecord" asp-route-id="@Model.Id" asp-route-hideCompletedAfter="@hideCompleted" asp-route-showDueTodayAfter="@showDueToday" class="buttonDelete">
                            Delete
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>